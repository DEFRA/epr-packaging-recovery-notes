@using EPRN.Common.Enums;
@using EPRN.Portal.Services.Interfaces;
@using EPRN.Portal.Helpers.Extensions;

@model ViewSentPrnsViewModel;

@inject IUserRoleService userRoleService;

@{
    if (userRoleService.HasRole(UserRole.Reprocessor))
    {
        ViewData["Title"] = ViewSentPrnResources.PrnTitle;
    }
    else if (userRoleService.HasRole(UserRole.Exporter))
    {
        ViewData["Title"] = ViewSentPrnResources.PernTitle;
    }

    if (userRoleService.HasRole(UserRole.Exporter) && userRoleService.HasRole(UserRole.Reprocessor))
    {
        ViewData["Title"] = ViewSentPrnResources.PrnPernTitle;
    }
}

<div class="govuk-width-container ">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            @{
                if (userRoleService.HasRole(UserRole.Reprocessor) && !userRoleService.HasRole(UserRole.Exporter))
                {
                    <h1 class="govuk-heading-xl">@ViewSentPrnResources.PrnHeading</h1>
                }

                if (userRoleService.HasRole(UserRole.Exporter) && !userRoleService.HasRole(UserRole.Reprocessor))
                {
                    <h1 class="govuk-heading-xl">@ViewSentPrnResources.PernHeading</h1>
                }

                if (userRoleService.HasRole(UserRole.Exporter) && userRoleService.HasRole(UserRole.Reprocessor))
                {
                    <h1 class="govuk-heading-xl">@ViewSentPrnResources.PrnPernHeading</h1>
                }
            }
            <form method="POST">
                <div class="govuk-form-group">
                    <h1 class="govuk-label-wrapper">
                        <label class="govuk-label" for="event-name">
                            @ViewSentPrnResources.SearchText
                        </label>
                    </h1>
                    <input class="govuk-input" id="event-name" name="eventName" type="text">
                </div>

                @{
                    if (userRoleService.HasRole(UserRole.Reprocessor) && !userRoleService.HasRole(UserRole.Exporter))
                    {
                        <button type="submit" class="govuk-button" data-module="govuk-button">
                            @ViewSentPrnResources.SearchPrnBtn
                        </button>
                    }

                    if (userRoleService.HasRole(UserRole.Exporter) && !userRoleService.HasRole(UserRole.Reprocessor))
                    {
                        <button type="submit" class="govuk-button" data-module="govuk-button">
                            @ViewSentPrnResources.SearchPernBtn
                        </button>
                    }

                    if (userRoleService.HasRole(UserRole.Exporter) && userRoleService.HasRole(UserRole.Reprocessor))
                    {
                        <button type="submit" class="govuk-button" data-module="govuk-button">
                            @ViewSentPrnResources.SearchPrnPernBtn
                        </button>
                    }
                }
            </form>
        </div>
    </div>

    <hr class="govuk-section-break govuk-section-break--xl govuk-section-break--visible">

    <p class="govuk-body">@ViewSentPrnResources.ViewDownloadCancelText</p>

    <div class="govuk-form-group" style="float:right">
        <select class="govuk-select" id="filter-by" name="filter-by">
            <option value="All" selected>@ViewSentPrnResources.FilterBy </option>
            <option value=@PrnRecordStatus.Accepted>@ViewSentPrnResources.Accepted </option>
            <option value=@PrnRecordStatus.AwaitingAcceptance>@ViewSentPrnResources.AwaitingAcceptance</option>
            <option value=@PrnRecordStatus.Rejected>@ViewSentPrnResources.Rejected</option>
            <option value=@PrnRecordStatus.AwaitingCancellation>@ViewSentPrnResources.AwaitingCancellation</option>
            <option value=@PrnRecordStatus.Cancelled>@ViewSentPrnResources.Cancelled</option>
        </select>
    </div>
    <div class="govuk-form-group" style="float:right">
        <select class="govuk-select" id="sort-by" name="sort-by">
            <option value="both" selected>@ViewSentPrnResources.SortBy </option>
            <option value=@ViewSentPrnResources.Material>@ViewSentPrnResources.Material</option>
            <option value=@ViewSentPrnResources.SentTo>@ViewSentPrnResources.SentTo</option>
        </select>
    </div>

    <table class="govuk-table">
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th scope="col" class="govuk-table__header">@ViewSentPrnResources.PrnNumber</th>
                <th scope="col" class="govuk-table__header">@ViewSentPrnResources.Material</th>
                <th scope="col" class="govuk-table__header">@ViewSentPrnResources.SentTo</th>
                <th scope="col" class="govuk-table__header">@ViewSentPrnResources.DateCreated</th>
                <th scope="col" class="govuk-table__header">@ViewSentPrnResources.Tonnes</th>
                <th scope="col" class="govuk-table__header">@ViewSentPrnResources.Status</th>
            </tr>
        </thead>
        <tbody class="govuk-table__body">
            @foreach (var row in Model.Rows)
            {
                <tr class="govuk-table__row" data-status="@row.Status">
                    <td class="govuk-table__cell">
                        <a href="@row.Link">@row.PrnNumber</a>
                    </td>
                    <td class="govuk-table__cell">@row.Material</td>
                    <td class="govuk-table__cell">@row.SentTo</td>
                    <td class="govuk-table__cell">@row.DateCreated</td>
                    <td class="govuk-table__cell">@row.Tonnes</td>

                    @switch (row.Status)
                    {
                        case PrnRecordStatus.Accepted:
                            <td class="govuk-table__cell">
                                <strong class="govuk-tag govuk-tag--green">
                                    @ViewSentPrnResources.Accepted.ToUpper()
                                </strong>
                            </td>
                            break;
                        case PrnRecordStatus.AwaitingAcceptance:
                            <td class="govuk-table__cell">
                                <strong class="govuk-tag govuk-tag--blue">
                                    @ViewSentPrnResources.AwaitingAcceptance.ToUpper()
                                </strong>
                            </td>
                            break;
                        case PrnRecordStatus.Rejected:
                            <td class="govuk-table__cell">
                                <strong class="govuk-tag govuk-tag--red">
                                    @ViewSentPrnResources.Rejected.ToUpper()
                                </strong>
                            </td>
                            break;
                        case PrnRecordStatus.AwaitingCancellation:
                            <td class="govuk-table__cell">
                                <strong class="govuk-tag govuk-tag--purple">
                                    @ViewSentPrnResources.AwaitingCancellation.ToUpper()
                                </strong>
                            </td>
                            break;
                        case PrnRecordStatus.Cancelled:
                            <td class="govuk-table__cell">
                                <strong class="govuk-tag govuk-tag--yellow">
                                    @ViewSentPrnResources.Cancelled.ToUpper()
                                </strong>
                            </td>
                            break;
                    }
                </tr>
            }
        </tbody>
    </table>

    @if (Model.Pagination != null)
    {
        <nav class="govuk-pagination" role="navigation" aria-label="Pagination">
            <ul class="govuk-pagination__list" role="list">

                @if (Model.Pagination.CurrentPage > 1)
                {
                    <div class="govuk-pagination__prev">
                        <a class="govuk-link govuk-pagination__link" href="@Url.Action("ViewSentPrns", new { page = Model.Pagination.CurrentPage - 1 })" rel="prev">
                            <svg class="govuk-pagination__icon govuk-pagination__icon--prev" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
                                <path d="m6.5938-0.0078125-6.7266 6.7266 6.7441 6.4062 1.377-1.449-4.1856-3.9768h12.896v-2h-12.984l4.2931-4.293-1.414-1.414z"></path>
                            </svg>
                            <span class="govuk-pagination__link-title">@ViewSentPrnResources.Previous<span class="govuk-visually-hidden"> page</span></span>
                        </a>
                    </div>
                }

                @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
                {
                    <li class="govuk-pagination__item @(i == Model.Pagination.CurrentPage ? "govuk-pagination__item--current" : "")">
                        <a class="govuk-link govuk-pagination__link" href="@Url.Action("ViewSentPrns", new { page = i })" aria-current="Page @i">
                            @i
                        </a>
                    </li>
                }

                @if (Model.Pagination.CurrentPage < Model.Pagination.TotalPages)
                {
                    <div class="govuk-pagination__next">
                        <a class="govuk-link govuk-pagination__link" href="@Url.Action("ViewSentPrns", new { page = Model.Pagination.CurrentPage + 1 })" rel="next">
                            <span class="govuk-pagination__link-title">@ViewSentPrnResources.Next<span class="govuk-visually-hidden"> page</span></span>
                            <svg class="govuk-pagination__icon govuk-pagination__icon--next" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
                                <path d="m8.107-0.0078125-1.4136 1.414 4.2926 4.293h-12.986v2h12.896l-4.1855 3.9766 1.377 1.4492 6.7441-6.4062-6.7246-6.7266z"></path>
                            </svg>
                        </a>
                    </div>
                }
            </ul>
        </nav>
    }
</div>